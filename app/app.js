App=Ember.Application.create(),Ember.RSVP.configure("onerror",function(a){a instanceof Error&&(Ember.Logger.assert(!1,a),Ember.Logger.error(a.stack))}),App.Adapter={ajax:function(a,b){var b=b||{};return b.dataType="json",Ember.$.ajax("https://api.github.com"+a,b)}},App.Issue=Ember.Object.extend({id:null,githubUrl:null,title:null,body:null,labels:null,repoId:function(){return this.get("githubUrl").split("/")[4]}.property("githubUrl"),repoOwnerId:function(){return this.get("githubUrl").split("/")[3]}.property("githubUrl")}),App.IssuesList=Ember.Object.extend({title:"All",count:null,issues:[],slug:function(){return this.get("title").dasherize()}.property("title")}),App.IssuesList.reopenClass({createRecord:function(a){console.log("IssueList createRecord",a);var b=App.IssuesList.create({count:a.total_count,title:"Ajax ..."});return b.set("issues",this.extractItems(a.items,b)),b},extractItems:function(a){return a.map(function(a){return App.Issue.create({id:a.id,title:a.title,githubUrl:a.html_url,body:a.body,labels:a.labels})})}}),App.Router.map(function(){this.resource("issues",function(){})}),window.history&&window.history.pushState&&App.Router.reopen({location:"history"}),App.IndexRoute=Ember.Route.extend({beforeModel:function(){this.transitionTo("issues")}}),App.IssuesRoute=Ember.Route.extend({model:function(){return new Ember.RSVP.Promise(function(a,b){App.Adapter.ajax('/search/issues?q=label:"good first bug"+state:open&sort=updated&order=asc&page=1&per_page=40').then(function(b){a(App.IssuesList.createRecord(b))},function(a){b(a)})})}});